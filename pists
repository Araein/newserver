➜  ft_server git:(master) cat autoindex_on.sh 
#!/bin/bash
docker stop ft_server
docker run --rm --env AUTOINDEX=on --name ft_server -d -p 443:443 -p 80:80 ft_server%                                       ➜  ft_server git:(master) cat autoindex_off.sh 
#!/bin/bash
docker stop ft_server
docker run --rm --env AUTOINDEX=off --name ft_server -d -p 443:443 -p 80:80 ft_server%    



***

#!/bin/bash
#docker build -t ft_server . --build-arg autoindex=off
docker build -t ft_server . 
docker run --rm --name ft_server -d -p 80:80 -p 443:443 ft_server
docker exec -it ft_server bash% 

***
# Install the base image
# Select image from Dockerhub - Debian Buster https://hub.docker.com/_/debia
FROM debian:buster

ENV AUTOINDEX on

# Update package list and Install services
# The -y flag is for auto "Yes"  
RUN apt-get update && apt-get install -y \
    nginx \
    mariadb-server \
    php-fpm \
    php-mysql \
    php-mbstring \
    wget \
    && rm -rf /var/lib/apt/lists/*

# NGINX
RUN     echo "daemon off;" >> /etc/nginx/nginx.conf && \ 
        rm var/www/html/index.nginx-debian.html
COPY	srcs/nginx/*.conf /tmp/
#COPY   /srcs/nginx/server.conf /etc/nginx/sites-available/server.conf
#RUN    ln -s /etc/nginx/sites-available/server.conf /etc/nginx/sites-enabled/server.conf
#RUN    rm -rf /etc/nginx/sites-enabled/default

# PHPMYADMIN
RUN wget https://files.phpmyadmin.net/phpMyAdmin/5.0.2/phpMyAdmin-5.0.2-english.tar.gz && \
    tar -xzvf phpMyAdmin-5.0.2-english.tar.gz && \
    mv phpMyAdmin-5.0.2-english/ /var/www/html/phpmyadmin && \
    rm -rf phpMyAdmin-5.0.2-english.tar.gz
COPY srcs/phpmyadmin/config.inc.php /var/www/html/phpmyadmin

# WordPress
RUN wget https://wordpress.org/latest.tar.gz && \
    tar -xzvf latest.tar.gz && \
    mv wordpress /var/www/html/ && \
    rm -rf latest.tar.gz
COPY srcs/wordpress/wp-config.php /var/www/html/wordpress

# SLL
RUN mkdir ~/mkcert && cd ~/mkcert && \
	wget https://github.com/FiloSottile/mkcert/releases/download/v1.4.1/mkcert-v1.4.1-linux-amd64 && \
	mv mkcert-v1.4.1-linux-amd64 mkcert && chmod +x mkcert && \
	./mkcert -install && ./mkcert localhost

# Giving nginx's user-group rights over page files
RUN	chown -R www-data:www-data /var/www/html/*

# Scripts: start.sh && change_index.sh
COPY srcs/*.sh ./

# Ports that needs to be exposed at run time with -p [host port]:[container port]
EXPOSE 80 443

CMD bash start.sh
***

CHANGE AUTOINDEX  

#!/bin/bash

# check if nginx already started, if yes make changes and reload, 
# if not (first attempt -> during building the container) just copy files

if (( $(ps -ef | grep -v grep | grep nginx | wc -l) > 0 ))
then
    if [ "$AUTOINDEX" = "off" ] ;
    then cp /tmp/server_auto_off.conf /etc/nginx/sites-available/default ;
    else cp /tmp/server.conf /etc/nginx/sites-available/default ; fi
service nginx reload
else
    if [ "$AUTOINDEX" = "off" ] ;
    then cp /tmp/server_auto_off.conf /etc/nginx/sites-available/default ;
    else cp /tmp/server.conf /etc/nginx/sites-available/default ; fi
fi
















